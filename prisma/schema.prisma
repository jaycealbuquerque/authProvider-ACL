// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  name               String
  email              String               @unique
  password_hash      String
  created_at         DateTime             @default(now())
  usersToken         UsersToken[]
  UsersOnRoles       UsersOnRoles[]
  UsersOnPermissions UsersOnPermissions[]

  @@map("users")
}

model UsersToken {
  id            String   @id @default(uuid())
  refresh_token String
  expires_date  DateTime
  created_at    DateTime @default(now())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("users_token")
}

model UsersOnRoles {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  roles      Roles    @relation(fields: [rolesId], references: [id])
  rolesId    String
  created_at DateTime @default(now())

  @@id([userId, rolesId])
  @@map("users_on_roles")
}

model UsersOnPermissions {
  permissions   Permissions @relation(fields: [permissionsId], references: [id])
  permissionsId String
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  created_at    DateTime    @default(now())

  @@id([permissionsId, userId])
  @@map("users_on_permissions")
}

model Roles {
  id           String         @id @default(uuid())
  name         String         @unique
  description  String
  created_at   DateTime       @default(now())
  UsersOnRoles UsersOnRoles[]

  @@map("roles")
}

model Permissions {
  id                 String               @id @default(uuid())
  name               String               @unique
  description        String
  created_at         DateTime             @default(now())
  UsersOnPermissions UsersOnPermissions[]

  @@map("permissions")
}
